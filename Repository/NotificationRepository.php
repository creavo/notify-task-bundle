<?php

namespace Creavo\NotifyTaskBundle\Repository;

use AppBundle\Entity\User;
use Doctrine\ORM\QueryBuilder;

/**
 * NotificationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NotificationRepository extends \Doctrine\ORM\EntityRepository {

    public function setAllNotificationsReadForUser(User $user) {
        $q=$this->_em->createQuery('UPDATE CreavoNotifyTaskBundle:Notification n SET n.read = :dt WHERE n.read IS NULL AND n.user =:user');
        $q
            ->setParameter('dt',new \DateTime('now'))
            ->setParameter('user',$user);

        $q->execute();
    }

    public function totalNotificationsForUser(User $user) {

        /** @var QueryBuilder $qb */
        $qb=$this->createQueryBuilder('n');

        $qb
            ->select('COUNT(n)')
            ->andWhere('n.user = :user')
            ->setParameter('user',$user);

        return $qb->getQuery()->getSingleScalarResult();
    }

    public function totalUnReadNotificationsForUser(User $user) {

        /** @var QueryBuilder $qb */
        $qb=$this->createQueryBuilder('n');

        $qb
            ->select('COUNT(n)')
            ->andWhere('n.user = :user')
            ->setParameter('user',$user)
            ->andWhere('n.read = FALSE');

        return $qb->getQuery()->getSingleScalarResult();
    }

}
